#!/usr/bin/env python3

# Standard imports
import os
import shutil

# Third-party imports
import requests

# Library-specific imports
from pyharnessworkshop import harness, utils

# REQUIRED VARIABLES LIST
HARNESS_ACCOUNT_ID = os.getenv("SE_WORKSHOP_ACCOUNT_ID")
HARNESS_ORG_ID = os.getenv("SE_WORKSHOP_ORG_ID")
HARNESS_PAT = os.getenv("SE_WORKSHOP_PAT")
HARNESS_PROJECT = utils.instruqt.get_agent_variable("HARNESS_PRJ_ID")
USER_EMAIL = utils.instruqt.get_agent_variable("HARNESS_USER")
CODE_REPO = utils.instruqt.get_agent_variable("HARNESS_REPO")
HARNESS_API = "https://app.harness.io"

# Workshop Variables
workshop_path = "/opt/workshop"

# Remove terraform files
shutil.rmtree("/opt/harness/terraform")

# Setup Harness Code
code_repo_url = f"https://git.harness.io/{HARNESS_ACCOUNT_ID}/{HARNESS_ORG_ID}/{HARNESS_PROJECT}/{CODE_REPO}.git"
utils.instruqt.set_agent_variable("HARNESS_REPO_URL", code_repo_url)

# Simplify user experience
utils.misc.run_command(f"git config --global user.email '{USER_EMAIL}'")
utils.misc.run_command(f"git config --global user.name '{USER_EMAIL}'")
netrc_file_content = f"""\
machine git.harness.io
login {USER_EMAIL}
password SAMPLE_PAT
"""
with open("/root/.netrc", "w") as netrc_file:
    netrc_file.write(netrc_file_content)
utils.misc.run_command(f"sed -i 's|DEFAULT_MACHINE|git.harness.io|g' {workshop_path}/script.sh")
utils.misc.run_command(f"sed -i 's|DEFAULT_USER|{USER_EMAIL}|g' {workshop_path}/script.sh")
utils.misc.run_command(f"sed -i 's|DEFAULT_ACCOUNT|{HARNESS_ACCOUNT_ID}|g' {workshop_path}/script.sh")
utils.misc.run_command(f"chmod +x {workshop_path}/script.sh")

harness.platform.update_repo_security_settings(HARNESS_PAT, HARNESS_ACCOUNT_ID, HARNESS_ORG_ID, HARNESS_PROJECT, CODE_REPO)

# Test Connectors
print("Testing connectors...")
connectors = ["instruqt_k8", "prometheus"]
for connector in connectors:
    url = f"{HARNESS_API}/gateway/ng/api/connectors/testConnection/{connector}?accountIdentifier={HARNESS_ACCOUNT_ID}&orgIdentifier={HARNESS_ORG_ID}&projectIdentifier={HARNESS_PROJECT}"
    headers = {
        "Content-Type": "application/json",
        "x-api-key": HARNESS_PAT
    }
    response = requests.post(url, headers=headers)
    response_code = response.status_code
    if 200 <= response_code < 300:
        print(f"  INFO: Successfully tested '{connector}'.")
    else:
        print(f"  ERROR: Request failed. Status Code: {response_code}")
        print(f"  Response Content: {response.content.decode('utf-8')}")
