---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-global-libraries
data:
  GlobalLibraries.xml: |
    <?xml version='1.1' encoding='UTF-8'?>
    <org.jenkinsci.plugins.workflow.libs.GlobalLibraries plugin="pipeline-groovy-lib@752.vdddedf804e72">
      <libraries>
        <org.jenkinsci.plugins.workflow.libs.LibraryConfiguration>
          <name>build-utils</name>
          <retriever class="org.jenkinsci.plugins.workflow.libs.SCMSourceRetriever">
            <clone>true</clone>
            <libraryPath>./</libraryPath>
            <scm class="jenkins.plugins.git.GitSCMSource" plugin="git@5.7.0">
              <id>743a1528-5dd2-4f82-8931-6d691a4f198d</id>
              <remote>https://github.com/jamie-harness/jenkins-shared-library-examples.git</remote>
              <credentialsId></credentialsId>
              <traits>
                <jenkins.plugins.git.traits.BranchDiscoveryTrait/>
              </traits>
            </scm>
          </retriever>
          <defaultVersion>main</defaultVersion>
          <implicit>false</implicit>
          <allowVersionOverride>true</allowVersionOverride>
          <includeInChangesets>true</includeInChangesets>
        </org.jenkinsci.plugins.workflow.libs.LibraryConfiguration>
      </libraries>
    </org.jenkinsci.plugins.workflow.libs.GlobalLibraries>

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jenkins
  labels:
    app: jenkins
spec:
  serviceName: jenkins
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      initContainers:
      - name: fix-permissions
        image: busybox:latest
        command: ["sh", "-c", "chown -R 1000:1000 /var/jenkins_home && chmod -R 770 /var/jenkins_home"]
        volumeMounts:
        - name: jenkins-home
          mountPath: /var/jenkins_home
        securityContext:
          runAsUser: 0
      - name: configure-global-libraries
        image: busybox:latest
        command: ["sh", "-c", "cp /config/GlobalLibraries.xml /var/jenkins_home/org.jenkinsci.plugins.workflow.libs.GlobalLibraries.xml && chown 1000:1000 /var/jenkins_home/org.jenkinsci.plugins.workflow.libs.GlobalLibraries.xml"]
        volumeMounts:
        - name: jenkins-home
          mountPath: /var/jenkins_home
        - name: global-libraries-config
          mountPath: /config
      containers:
      - name: jenkins
        image: us-east1-docker.pkg.dev/sales-209522/titra/jenkins-lab:0.1.1
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 50000
          name: agent
        env:
        - name: JAVA_OPTS
          value: "-Djenkins.install.runSetupWizard=false -Dhudson.model.DirectoryBrowserSupport.CSP='' -Djenkins.security.FrameOptionsPageDecorator.enabled=false -Djava.util.logging.ConsoleHandler.level=FINE"
        - name: DOCKER_HOST
          value: "unix:///var/run/docker.sock"
        volumeMounts:
        - name: jenkins-home
          mountPath: /var/jenkins_home
        - name: docker-run
          mountPath: /var/run
        resources:
          limits:
            cpu: "1"
            memory: "2Gi"
          requests:
            cpu: "0.5"
            memory: "1Gi"
      - name: dind
        image: docker:24.0-dind
        securityContext:
          privileged: true
        env:
        - name: DOCKER_TLS_CERTDIR
          value: ""
        - name: DOCKER_HOST
          value: "unix:///var/run/docker.sock"
        volumeMounts:
        - name: docker-run
          mountPath: /var/run
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "256Mi"
      volumes:
      - name: docker-run
        emptyDir: {}
      - name: global-libraries-config
        configMap:
          name: jenkins-global-libraries
  volumeClaimTemplates:
  - metadata:
      name: jenkins-home
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: standard

---
apiVersion: v1
kind: Service
metadata:
  name: jenkins
spec:
  selector:
    app: jenkins
  ports:
  - name: http
    port: 80
    targetPort: 8080
  - name: agent
    port: 50000
    targetPort: 50000
  type: LoadBalancer
