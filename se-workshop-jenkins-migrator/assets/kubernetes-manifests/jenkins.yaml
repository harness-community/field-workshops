---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-config
data:
  GlobalLibraries.xml: |
    <?xml version='1.1' encoding='UTF-8'?>
    <org.jenkinsci.plugins.workflow.libs.GlobalLibraries plugin="pipeline-groovy-lib@752.vdddedf804e72">
      <libraries>
        <org.jenkinsci.plugins.workflow.libs.LibraryConfiguration>
          <name>build-utils</name>
          <retriever class="org.jenkinsci.plugins.workflow.libs.SCMSourceRetriever">
            <clone>true</clone>
            <libraryPath>./</libraryPath>
            <scm class="jenkins.plugins.git.GitSCMSource" plugin="git@5.7.0">
              <id>743a1528-5dd2-4f82-8931-6d691a4f198d</id>
              <remote>https://github.com/jamie-harness/jenkins-shared-library-examples.git</remote>
              <credentialsId></credentialsId>
              <traits>
                <jenkins.plugins.git.traits.BranchDiscoveryTrait/>
              </traits>
            </scm>
          </retriever>
          <defaultVersion>main</defaultVersion>
          <implicit>false</implicit>
          <allowVersionOverride>true</allowVersionOverride>
          <includeInChangesets>true</includeInChangesets>
        </org.jenkinsci.plugins.workflow.libs.LibraryConfiguration>
      </libraries>
    </org.jenkinsci.plugins.workflow.libs.GlobalLibraries>
  credentials.xml: |
    <?xml version='1.1' encoding='UTF-8'?>
      <com.cloudbees.plugins.credentials.SystemCredentialsProvider plugin="credentials@1415.v831096eb_5534">
        <domainCredentialsMap class="hudson.util.CopyOnWriteMap$Hash">
          <entry>
            <com.cloudbees.plugins.credentials.domains.Domain>
              <specifications/>
            </com.cloudbees.plugins.credentials.domains.Domain>
            <java.util.concurrent.CopyOnWriteArrayList>
              <com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl>
                <scope>GLOBAL</scope>
                <id>docker-hub-credentials</id>
                <description></description>
                <username>seworkshop</username>
                <password>{AQAAABAAAAAw+AoVVj//NMbyVDdHP52MJfq+kf7xB3TRXXFG9CRwRXzwF13asKG1bLSnlTmDzEiuXP3mqj9HXeggUHeHIZHyfQ==}</password>
                <usernameSecret>false</usernameSecret>
              </com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl>
            </java.util.concurrent.CopyOnWriteArrayList>
          </entry>
        </domainCredentialsMap>
      </com.cloudbees.plugins.credentials.SystemCredentialsProvider>
  config.xml: |
    <?xml version='1.1' encoding='UTF-8'?>
    <hudson>
      <disabledAdministrativeMonitors>
        <string>hudson.util.DoubleLaunchChecker</string>
      </disabledAdministrativeMonitors>
      <version>2.492.3</version>
      <numExecutors>0</numExecutors>
      <mode>EXCLUSIVE</mode>
      <authorizationStrategy class="hudson.security.AuthorizationStrategy$Unsecured"/>
      <securityRealm class="hudson.security.SecurityRealm$None"/>
      <disableRememberMe>false</disableRememberMe>
      <projectNamingStrategy class="jenkins.model.ProjectNamingStrategy$DefaultProjectNamingStrategy"/>
      <workspaceDir>${JENKINS_HOME}/workspace/${ITEM_FULL_NAME}</workspaceDir>
      <buildsDir>${ITEM_ROOTDIR}/builds</buildsDir>
      <jdks/>
      <viewsTabBar class="hudson.views.DefaultViewsTabBar"/>
      <myViewsTabBar class="hudson.views.DefaultMyViewsTabBar"/>
      <clouds>
        <org.csanchez.jenkins.plugins.kubernetes.KubernetesCloud plugin="kubernetes@4324.vfec199a_33512">
          <name>gke</name>
          <templates>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <id>ecfac917-9f97-4ffe-bc55-139e787ef5a0</id>
              <name>build-agent</name>
              <privileged>false</privileged>
              <capOnlyOnAlivePods>false</capOnlyOnAlivePods>
              <alwaysPullImage>false</alwaysPullImage>
              <instanceCap>2147483647</instanceCap>
              <slaveConnectTimeout>1000</slaveConnectTimeout>
              <idleMinutes>0</idleMinutes>
              <activeDeadlineSeconds>0</activeDeadlineSeconds>
              <hostNetwork>false</hostNetwork>
              <volumes/>
              <containers/>
              <envVars/>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
              <agentInjection>false</agentInjection>
              <yaml>apiVersion: v1
    kind: Pod
    metadata:
      labels:
        app: jenkins-agent
    spec:
      containers:
      - name: gradle
        image: gradle:8.3.0-jdk17
        command:
        - cat
        tty: true
        volumeMounts:
        - name: workspace
          mountPath: /home/jenkins/workspace
      - name: docker
        image: docker:dind
        securityContext:
          privileged: true
        env:
        - name: DOCKER_TLS_CERTDIR
          value: &quot;&quot;
        command:
        - dockerd
        - --host=tcp://0.0.0.0:2375
        - --host=unix:///var/run/docker.sock
        volumeMounts:
        - name: workspace
          mountPath: /home/jenkins/workspace
      volumes:
      - name: workspace
        emptyDir: {}</yaml>
              <yamlMergeStrategy class="org.csanchez.jenkins.plugins.kubernetes.pod.yaml.Overrides"/>
              <inheritYamlMergeStrategy>false</inheritYamlMergeStrategy>
              <showRawYaml>true</showRawYaml>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
          </templates>
          <serverUrl>https://kubernetes.default.svc</serverUrl>
          <useJenkinsProxy>false</useJenkinsProxy>
          <skipTlsVerify>false</skipTlsVerify>
          <addMasterProxyEnvVars>false</addMasterProxyEnvVars>
          <capOnlyOnAlivePods>false</capOnlyOnAlivePods>
          <restrictedPssSecurityContext>false</restrictedPssSecurityContext>
          <webSocket>false</webSocket>
          <directConnection>false</directConnection>
          <jenkinsUrl>http://jenkins</jenkinsUrl>
          <containerCap>10</containerCap>
          <retentionTimeout>5</retentionTimeout>
          <connectTimeout>5</connectTimeout>
          <readTimeout>15</readTimeout>
          <podLabels>
            <org.csanchez.jenkins.plugins.kubernetes.PodLabel>
              <key>jenkins</key>
              <value>slave</value>
            </org.csanchez.jenkins.plugins.kubernetes.PodLabel>
          </podLabels>
          <usageRestricted>false</usageRestricted>
          <maxRequestsPerHost>32</maxRequestsPerHost>
          <waitForPodSec>600</waitForPodSec>
          <podRetention class="org.csanchez.jenkins.plugins.kubernetes.pod.retention.Never"/>
        </org.csanchez.jenkins.plugins.kubernetes.KubernetesCloud>
      </clouds>
      <quietPeriod>5</quietPeriod>
      <scmCheckoutRetryCount>0</scmCheckoutRetryCount>
      <views>
        <hudson.model.AllView>
          <owner class="hudson" reference="../../.."/>
          <name>all</name>
          <filterExecutors>false</filterExecutors>
          <filterQueue>false</filterQueue>
          <properties class="hudson.model.View$PropertyList"/>
        </hudson.model.AllView>
      </views>
      <primaryView>all</primaryView>
      <slaveAgentPort>50000</slaveAgentPort>
      <label></label>
      <crumbIssuer class="hudson.security.csrf.DefaultCrumbIssuer">
        <excludeClientIPFromCrumb>true</excludeClientIPFromCrumb>
      </crumbIssuer>
      <nodeProperties/>
      <globalNodeProperties/>
      <nodeRenameMigrationNeeded>false</nodeRenameMigrationNeeded>
    </hudson>

---
apiVersion: v1
kind: Secret
metadata:
  name: jenkins-secrets
type: Opaque
data:
  secret.key: |
    ZDk4NTRlZmVjNDA0MTNmNTlhMTc0M2MxZmE2NTIzY2I3YjA0NjNiMmFlNmZmMTFlODhjZDhjOGQ1
    YTJjOTFiZg==
  master.key: |
    ZWVkYTZhMTU3YjhjYWRhZjUyMTJhNzFkYjdlNDc0ZjRiYjE4YmNkNjgzODYzYTA2ZTQ4ZDAzNWYz
    YmY4YTk2YjlmYzVhNTViNTgyMGU5ZTYyOTIzODg0YTIyODZiMmI5Yzc3YzdjNDg5NTQxZTA0NDJj
    MDYxZjFkNmFlYWE4NmYxMjdjYTgwMTMzZmVhYjAxYTQwMWE2YjI0ZDg2NWE4MjMzN2MwYjY0NDIy
    ZDJmZWMwNTkxMjdlZGJhMTE4ZDhjODhjYWVjMDhmOGE5MjYyMDNhMDg0YjBmZmY0YjAzZmY5MGRm
    Yzg0ODQ5MzNmMGYwOWY4OWJkY2UyZTNkOGI2Mg==
  hudson.util.Secret: |
    Tpo2/hLOnK3rvYEqKJizmVhjmJML+JQeEPqQgxXYvE40yHpmh/4H81/KuefisUvxE3sXU0m57rt1
    fRZuaoRgltPSn6uo7aGaK8DvRpkay9ddBEwayPg3OnjgNq22ZCFQDK/R0tnCrg3pH4Y5hJhhHw32
    TH6063HvTlSdhYQmC4aszfPXDwA3369s4Lq2ktdbmtTO6jsKgCBT+L5zS+zgin42lVCCZeE8ghCh
    M1B/3fNrEj/H4bBssi5S7HRQmLk81/G+pmrhB1oT1P47RgQP34ex1+KqhRolH3neMH2Bf8KK1Lzh
    Ztla/o69kHWA7A29j8LGD6uoilh/UeiHSMZRu7BfbmaIbVFcc4Jy2gkmZA4=

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jenkins
  labels:
    app: jenkins
spec:
  serviceName: jenkins
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      initContainers:
      - name: fix-permissions
        image: busybox:latest
        command:
          - sh
          - '-c'
          - >-
            chown -R 1000:1000 /var/jenkins_home && chmod -R 770
            /var/jenkins_home
        volumeMounts:
        - name: jenkins-home
          mountPath: /var/jenkins_home
        securityContext:
          runAsUser: 0
      - name: configure-jenkins
        image: busybox:latest
        command:
          - sh
          - '-c'
          - >-
            mkdir -p /var/jenkins_home/secrets &&
            cp /config/GlobalLibraries.xml /var/jenkins_home/org.jenkinsci.plugins.workflow.libs.GlobalLibraries.xml &&
            cp /config/config.xml /var/jenkins_home/config.xml
            && cp /config/credentials.xml /var/jenkins_home/credentials.xml
            && cp /secrets/secret.key /var/jenkins_home/secret.key
            && cp /secrets/master.key /var/jenkins_home/secrets/master.key
            && cp /secrets/hudson.util.Secret /var/jenkins_home/secrets/hudson.util.Secret
            && chown -R 1000:1000 /var/jenkins_home
        volumeMounts:
        - name: jenkins-home
          mountPath: /var/jenkins_home
        - name: jenkins-config
          mountPath: /config
        - name: jenkins-secrets
          mountPath: /secrets
      containers:
      - name: jenkins
        image: us-east1-docker.pkg.dev/sales-209522/titra/jenkins-lab:0.1.4
        command:
          - /bin/bash
          - -c
          - |
            # Start convert_server_amd64 with nohup in the background
            nohup convert_server_amd64 > /var/jenkins_home/convert_server_amd64.log 2>&1 &
            # Run Jenkins default entrypoint
            exec /usr/local/bin/jenkins.sh
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 50000
          name: agent
        env:
        - name: JAVA_OPTS
          value: >-
            -Djenkins.install.runSetupWizard=false
            -Dhudson.model.DirectoryBrowserSupport.CSP=''
            -Djenkins.security.FrameOptionsPageDecorator.enabled=false
            -Djava.util.logging.ConsoleHandler.level=FINE
            -Dhudson.ProxyConfiguration.DISABLE_REVERSE_PROXY_CHECK=true
            -Dhudson.security.csrf.GlobalCrumbIssuerConfiguration.DISABLE_CSRF=true
        - name: DOCKER_HOST
          value: "unix:///var/run/docker.sock"
        volumeMounts:
        - name: jenkins-home
          mountPath: /var/jenkins_home
        - name: docker-run
          mountPath: /var/run
        resources:
          limits:
            cpu: "1"
            memory: "2Gi"
          requests:
            cpu: "0.5"
            memory: "1Gi"
      - name: dind
        image: docker:24.0-dind
        securityContext:
          privileged: true
        env:
        - name: DOCKER_TLS_CERTDIR
          value: ""
        - name: DOCKER_HOST
          value: "unix:///var/run/docker.sock"
        volumeMounts:
        - name: docker-run
          mountPath: /var/run
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "256Mi"
      volumes:
      - name: docker-run
        emptyDir: {}
      - name: jenkins-config
        configMap:
          name: jenkins-config
      - name: jenkins-secrets
        secret:
          secretName: jenkins-secrets
  volumeClaimTemplates:
  - metadata:
      name: jenkins-home
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: standard

---
apiVersion: v1
kind: Service
metadata:
  name: jenkins
spec:
  selector:
    app: jenkins
  ports:
  - name: http
    port: 80
    targetPort: 8080
  - name: agent
    port: 50000
    targetPort: 50000
  type: LoadBalancer
