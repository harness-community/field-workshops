#!/usr/bin/env python3

# Standard library imports
import os
import time
import shutil
import subprocess

# Third-party imports
subprocess.run(["apt-get install -y -qq -o=Dpkg::Use-Pty=0 python3-pip > /dev/null"], check=True, shell=True)
subprocess.run([
    "pip",
    "install",
    "git+https://github.com/jtitra/pyharnessworkshop.git#egg=pyharnessworkshop"],
    stdout=subprocess.DEVNULL,
    check=True)
from pyharnessworkshop import harness, keycloak, utils  # noqa: E402

######################## ADD ANY WORKSHOP SPECIFIC SETUP AT THE VERY BOTTOM ########################
WORKSHOP_TYPE = "iacm"
################################## START OF DO NOT MODIFY SECTION ##################################

# REQUIRED VARIABLES LIST
HARNESS_ACCOUNT_ID = os.getenv("SE_WORKSHOP_ACCOUNT_ID")
HARNESS_ORG_ID = os.getenv("SE_WORKSHOP_ORG_ID")
HARNESS_PAT = os.getenv("SE_WORKSHOP_PAT")
HARNESS_USER_GROUP = os.getenv("SE_WORKSHOP_USER_GRP_ID")
USER_PWD = os.getenv("SE_WORKSHOP_USER_PWD")
KEYCLOAK_ENDPOINT = os.getenv("SE_WORKSHOP_KEYCLOAK_ENDPOINT")
KEYCLOAK_REALM = os.getenv("SE_WORKSHOP_KEYCLOAK_REALM")
KEYCLOAK_ADMIN_USER = os.getenv("SE_WORKSHOP_KEYCLOAK_ADMIN_USER")
KEYCLOAK_ADMIN_PWD = os.getenv("SE_WORKSHOP_KEYCLOAK_ADMIN_PWD")

print("We've only just begun...")

# Wait for Instruqt bootstrap to complete
while not os.path.isfile("/opt/instruqt/bootstrap/host-bootstrap-completed"):
    print("Waiting for Instruqt to finish booting the virtual machine")
    time.sleep(1)

# Create directories
os.makedirs('/opt/harness/scripts/py', exist_ok=True)
os.makedirs('/opt/harness/misc', exist_ok=True)

# Wait for the Kubernetes API server to become available
utils.k8s.wait_for_kubernetes_api("http://localhost:8001/api")

# Create Harness user on Instruqt workshop VM
utils.misc.run_command("useradd -m harness")

RANDOM_SUFFIX = utils.misc.generate_random_suffix()
HARNESS_PROJECT = f"{WORKSHOP_TYPE}{RANDOM_SUFFIX}"
USER_NAME = f"{WORKSHOP_TYPE}{RANDOM_SUFFIX}"
USER_EMAIL = f"{USER_NAME}@harness.io"

# Generate Keycloak Bearer Token
KEYCLOAK_TOKEN = keycloak.auth.generate_keycloak_token(KEYCLOAK_ENDPOINT, KEYCLOAK_ADMIN_USER, KEYCLOAK_ADMIN_PWD)
# Create workshop user in Keycloak Realm
keycloak.user.create_keycloak_user(KEYCLOAK_ENDPOINT, KEYCLOAK_REALM, KEYCLOAK_TOKEN, USER_EMAIL, USER_NAME, USER_PWD)

# Create a Sandbox Project for the User in Harness
harness.platform.create_harness_project(HARNESS_PAT, HARNESS_ACCOUNT_ID, HARNESS_ORG_ID, HARNESS_PROJECT)
HARNESS_PROJECT_CREATED = "true"

utils.instruqt.set_agent_variable("HARNESS_USER", USER_EMAIL)
utils.instruqt.set_agent_variable("HARNESS_PWD", USER_PWD)
utils.instruqt.set_agent_variable("HARNESS_PRJ_ID", HARNESS_PROJECT)
utils.instruqt.set_agent_variable("HARNESS_PRJ_CREATED", HARNESS_PROJECT_CREATED)
################################## END OF DO NOT MODIFY SECTION ##################################

############################# ADD ANY WORKSHOP SPECIFIC SETUP BELOW ##############################
workshop_path = "/opt/workshop/terraform"
utils.misc.run_command(f"mkdir -p {workshop_path}")
subprocess.run(["apt-get update -qq -o=Dpkg::Use-Pty=0 > /dev/null"], check=True, shell=True)
subprocess.run(["apt-get install -y -qq -o=Dpkg::Use-Pty=0 awscli > /dev/null"], check=True, shell=True)
utils.misc.run_command("aws configure set default.region us-east-1")

# Get assets for workshop
print("Cloning se-iacm-workshop repo...")
# └── se-iacm-workshop
#     └── aws
#         └── v1
utils.misc.run_command("git clone https://github.com/harness-community/se-iacm-workshop.git")
shutil.copytree("se-iacm-workshop", f"{workshop_path}/", dirs_exist_ok=True)
utils.misc.run_command(f"chown -R harness:harness {workshop_path}/")
shutil.rmtree("se-iacm-workshop")

# Install VS Code
utils.misc.setup_vs_code(8443, "/opt/workshop/terraform/aws/v1")
