#!/bin/bash

######################## ADD ANY WORKSHOP SPECIFIC SETUP AT THE VERY BOTTOM ########################
WORKSHOP_TYPE="iacm"
################################## START OF DO NOT MODIFY SECTION ##################################
# REQUIRED VARIABLES LIST
HARNESS_ACCOUNT_ID="${SE_WORKSHOP_ACCOUNT_ID}"
HARNESS_ORG_ID="${SE_WORKSHOP_ORG_ID}"
HARNESS_PAT="${SE_WORKSHOP_PAT}"
HARNESS_USER_GROUP="${SE_WORKSHOP_USER_GRP_ID}"
RANDOM_SUFFIX=$(echo $RANDOM | md5sum | head -c 10; echo;)
HARNESS_PROJECT="$WORKSHOP_TYPE$RANDOM_SUFFIX"
USER_PWD="${SE_WORKSHOP_USER_PWD}"
SKIP_KEYCLOAK=false

if [ "$SKIP_KEYCLOAK" = true ]; then
    USER_EMAIL="jtitra@gmail.com"
else
    USER_NAME="$WORKSHOP_TYPE$RANDOM_SUFFIX"
    USER_EMAIL="$USER_NAME@harness.io"
    KEYCLOAK_ENDPOINT="${SE_WORKSHOP_KEYCLOAK_ENDPOINT}"
    KEYCLOAK_REALM="${SE_WORKSHOP_KEYCLOAK_REALM}"
    KEYCLOAK_ADMIN_USER="${SE_WORKSHOP_KEYCLOAK_ADMIN_USER}"
    KEYCLOAK_ADMIN_PWD="${SE_WORKSHOP_KEYCLOAK_ADMIN_PWD}"
fi

echo "We've only just begun..."

# Wait for Instruqt bootstrap to complete
while [ ! -f /opt/instruqt/bootstrap/host-bootstrap-completed ]
do
    echo "Waiting for Instruqt to finish booting the virtual machine"
    sleep 1
done

# Create Harness user on Instruqt workshop VM
useradd -m harness

# Get assets for workshop
mkdir -p /opt/harness/{scripts,misc}
curl --silent --request GET \
    --location "https://raw.githubusercontent.com/harness-community/field-workshops/main/assets/scripts/instruqt_functions.sh" \
    --output /opt/harness/scripts/instruqt_functions.sh
chmod +x /opt/harness/scripts/instruqt_functions.sh

# Source Instruqt Functions
source /opt/harness/scripts/instruqt_functions.sh

# Wait for the Kubernetes API server to become available
while ! curl --silent --fail --output /dev/null http://localhost:8001/api 
do
    echo "Waiting for the Kubernetes API server to become available..."
    sleep 2 
done

# Enable bash completion for kubectl
echo "source /usr/share/bash-completion/bash_completion" >> /root/.bashrc
echo "complete -F __start_kubectl k" >> /root/.bashrc

if [ "$SKIP_KEYCLOAK" = true ]; then
    echo "Skipping Keycloak Setup"
else
    # Generate Keycloak Bearer Token
    generate_keycloak_token $KEYCLOAK_ENDPOINT $KEYCLOAK_ADMIN_USER $KEYCLOAK_ADMIN_PWD
    # Create workshop user in Keycloak Realm
    create_keycloak_user $KEYCLOAK_ENDPOINT $KEYCLOAK_REALM $KEYCLOAK_TOKEN $USER_EMAIL $USER_NAME $USER_PWD
fi

# Create a Sandbox Project for the User in Harness
create_harness_project $HARNESS_PAT $HARNESS_ACCOUNT_ID $HARNESS_ORG_ID $HARNESS_PROJECT
HARNESS_PROJECT_CREATED=true

agent variable set HARNESS_USER $USER_EMAIL
agent variable set HARNESS_PWD $USER_PWD
agent variable set HARNESS_PRJ_ID $HARNESS_PROJECT
agent variable set HARNESS_PRJ_CREATED $HARNESS_PROJECT_CREATED
agent variable set KEYCLOAK_CONFIG $SKIP_KEYCLOAK
################################## END OF DO NOT MODIFY SECTION ##################################

############################# ADD ANY WORKSHOP SPECIFIC SETUP BELOW ##############################
# Install AWS CLI
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip > /dev/null
sudo ./aws/install
rm -f awscliv2.zip
echo "complete -C '/usr/local/bin/aws_completer' aws" >> /root/.bashrc
aws configure set default.region us-east-1

# Clone IACM Workshop Repo
echo "Cloning iacm-workshop repo..."
mkdir -p /opt/workshop/terraform
git clone https://github.com/harness-community/iacm-workshop.git
#└── iacm-workshop
#    └── aws
#        └── v1
cp -r iacm-workshop/aws /opt/workshop/terraform
chown -R harness:harness /opt/workshop/
rm -rf iacm-workshop/

# Install VS Code
setup_vs_code 8443 "/opt/workshop/terraform/aws/v1"
