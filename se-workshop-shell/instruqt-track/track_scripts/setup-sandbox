#!/usr/bin/env python3

# Standard library imports
import os
import time

# Third-party imports
from pyharnessworkshop import harness, keycloak, utils

######################## ADD ANY WORKSHOP SPECIFIC SETUP AT THE VERY BOTTOM ########################
WORKSHOP_TYPE = "shell"
################################## START OF DO NOT MODIFY SECTION ##################################

# REQUIRED VARIABLES LIST
HARNESS_ACCOUNT_ID = os.getenv("SE_WORKSHOP_ACCOUNT_ID")
HARNESS_ORG_ID = os.getenv("SE_WORKSHOP_ORG_ID")
HARNESS_PAT = os.getenv("SE_WORKSHOP_PAT")
HARNESS_USER_GROUP = os.getenv("SE_WORKSHOP_USER_GRP_ID")
USER_PWD = os.getenv("SE_WORKSHOP_USER_PWD")
KEYCLOAK_ENDPOINT = os.getenv("SE_WORKSHOP_KEYCLOAK_ENDPOINT")
KEYCLOAK_REALM = os.getenv("SE_WORKSHOP_KEYCLOAK_REALM")
KEYCLOAK_ADMIN_USER = os.getenv("SE_WORKSHOP_KEYCLOAK_ADMIN_USER")
KEYCLOAK_ADMIN_PWD = os.getenv("SE_WORKSHOP_KEYCLOAK_ADMIN_PWD")

print("We've only just begun...")

# Wait for Instruqt bootstrap to complete
while not os.path.isfile("/opt/instruqt/bootstrap/host-bootstrap-completed"):
    print("Waiting for Instruqt to finish booting the virtual machine")
    time.sleep(1)

# Wait for the Kubernetes API server to become available
utils.k8s.wait_for_kubernetes_api("http://localhost:8001/api")

random_suffix = utils.misc.generate_random_suffix()
harness_project = f"{WORKSHOP_TYPE}{random_suffix}"
user_name = f"{WORKSHOP_TYPE}{random_suffix}"
user_email = f"{user_name}@harness.io"

# Generate Keycloak Bearer Token
keycloak_token = keycloak.auth.generate_keycloak_token(KEYCLOAK_ENDPOINT, KEYCLOAK_ADMIN_USER, KEYCLOAK_ADMIN_PWD)
# Create workshop user in Keycloak Realm
keycloak.user.create_keycloak_user(KEYCLOAK_ENDPOINT, KEYCLOAK_REALM, keycloak_token, user_email, user_name, USER_PWD)

# Create a Sandbox Project for the User in Harness
harness.platform.create_harness_project(HARNESS_PAT, HARNESS_ACCOUNT_ID, HARNESS_ORG_ID, harness_project)
harness_project_created = "true"

# Add the workshop user to the Harness project as an admin
harness.platform.invite_user_to_harness_project_loop(HARNESS_PAT, HARNESS_ACCOUNT_ID, HARNESS_ORG_ID, harness_project, user_email)

# Install delegate
template_path = "assets/kubernetes-manifests/harness-delegate.yaml.template"
utils.misc.fetch_template_from_url(template_path, "/opt/harness/harness-delegate.yaml.template")
harness.platform.deploy_harness_delegate(
        HARNESS_PAT, HARNESS_ACCOUNT_ID, HARNESS_ORG_ID, harness_project,
        "/opt/harness/harness-delegate.yaml.template", f"{harness_project}-delegate"
)

utils.instruqt.set_agent_variable("HARNESS_USER", user_email)
utils.instruqt.set_agent_variable("HARNESS_PWD", USER_PWD)
utils.instruqt.set_agent_variable("HARNESS_PRJ_ID", harness_project)
utils.instruqt.set_agent_variable("HARNESS_PRJ_CREATED", harness_project_created)
################################## END OF DO NOT MODIFY SECTION ##################################

############################# ADD ANY WORKSHOP SPECIFIC SETUP BELOW ##############################
#
#
